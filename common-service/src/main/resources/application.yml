# common config for all profiles

server:
  port: 8000

kafka:
  topics:
    - user-creation

spring:
  profiles:
    active: local
  main:
    web-application-type: reactive

---

spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8443/realms/ipmac
          jwk-set-uri: http://localhost:8443/realms/ipmac/protocol/openid-connect/certs
  cloud:
    gateway:
      routes:
        - id: training-service
          uri: http://localhost:8080
          predicates:
            - Path=/api/training/**
        - id: admin-service
          uri: http://localhost:8081
          predicates:
            - Path=/api/admin/**


oauth2:
  auth-server-url: http://localhost:8443
  realm: ipmac
  admin-client:
    client-id: admin-cli
    client-secret: 855w56kgeLtU8EyGZ4aOqDItwsTUSjeQ
  clients:
    - ipmac-fe

cors:
  allowed-origins: http://localhost:5173

logging:
  level:
    org.springframework.web: trace

--- 

spring:
  config:
    activate:
      on-profile: dev
  security:
    oauth2:
      resourceserver:
        # point to internal keycloak instance
        jwt:
          issuer-uri: http://keycloak:8443/realms/ipmac
          jwk-set-uri: http://keycloak:8443/realms/ipmac/protocol/openid-connect/certs
  cloud:
    gateway:
      routes:
        - id: training-service
          uri: http://training-service:8080
          predicates:
            - Path=/api/training/**
        - id: admin-service
          uri: http://admin-service:8081
          predicates:
            - Path=/api/admin/**


oauth2:
  auth-server-url: http://keycloak:8443
  realm: ipmac
  admin-client:
    client-id: admin-cli
    client-secret: 855w56kgeLtU8EyGZ4aOqDItwsTUSjeQ

cors:
  allowed-origins: http://fe:5173

